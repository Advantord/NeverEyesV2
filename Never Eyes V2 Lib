local CfgHub = {
Col_Hub = Color3.fromRGB(0, 0, 0),
Col_Options = Color3.fromRGB(0, 0, 0),
Col_All_Btn = Color3.fromRGB(18, 0, 53),
Col_Stroke = Color3.fromRGB(255, 255, 255),
Col_LinesTwo = Color3.fromRGB(18, 0, 53),
Set_Col_Txt = Color3.fromRGB(255, 255, 255),
Set_Col_Txt2 = Color3.fromRGB(140, 140, 140),
Txt_Font = Enum.Font.Jura
}

local CoreGui = game:GetService("CoreGui")
local TweenService = game:GetService("TweenService")
local UserInputService = game:GetService("UserInputService")

-- Base

local function Create(instance, parent, props)
local new = Instance.new(instance, parent)
if props then
table.foreach(props, function(prop, value)
new[prop] = value
end)
end
return new
end

local function SetProps(instance, props)
if instance and props then
table.foreach(props, function(prop, value)
instance[prop] = value
end)
end
return instance
end

local function Stroke(parent, props)
local new = Create("UIStroke", parent)
new.Color = CfgHub.Col_Stroke
new.ApplyStrokeMode = "Border"
if props then
SetProps(new, props)
end
return new
end

local function CreateTween(instance, prop, value, time, tweenWait)
local tween = TweenService:Create(instance,
TweenInfo.new(time, Enum.EasingStyle.Linear),
{[prop] = value})
tween:Play()
if tweenWait then
tween.Completed:Wait()
end
end

local function TextSetColor(instance)
instance.MouseEnter:Connect(function()
CreateTween(instance, "TextColor3", Color3.fromRGB(250, 250, 250), 0.4, true)
end)
instance.MouseLeave:Connect(function()
CreateTween(instance, "TextColor3", CfgHub.Set_Col_Txt, 0.4, false)
end)
end

-- Starting and Destroy

local ScreenGui = Create("ScreenGui", CoreGui, {
Name = "NE"
})

ScreenFind = CoreGui:FindFirstChild(ScreenGui.Name)
if ScreenFind and ScreenFind ~= ScreenGui then
ScreenFind:Destroy()
end

function DestroyScript()
ScreenGui:Destroy()
end

-- notifi

local Menu_Notifi = Create("Frame", ScreenGui, {
  Size = UDim2.new(0, 300, 1, 0),
  BorderSizePixel = 0,
  Position = UDim2.new(1, 0, 0, 0),
  AnchorPoint = Vector2.new(1, 0),
  BackgroundTransparency = 1
})

local Padding = Create("UIPadding", Menu_Notifi, {
  PaddingLeft = UDim.new(0, 25),
  PaddingTop = UDim.new(0, 25),
  PaddingBottom = UDim.new(0, 50)
})

local ListLayout = Create("UIListLayout", Menu_Notifi, {
  Padding = UDim.new(0, 15),
  VerticalAlignment = "Bottom"
})

function MakeNotifi(Configs)
  local Title = Configs.Title or "Noner Hub"
  local text = Configs.Text or "Notificação"
  local timewait = Configs.Time or 5
  
  local Frame1 = Create("Frame", Menu_Notifi, {
    Size = UDim2.new(2, 0, 0, 0),
    BackgroundTransparency = 1,
    BorderSizePixel = 0,
    AutomaticSize = "Y",
  })
  
  local Frame2 = Create("Frame", Frame1, {
    Size = UDim2.new(0, Menu_Notifi.Size.X.Offset - 50, 0, 0),
    BackgroundColor3 = CfgHub.Col_Hub,
    BorderSizePixel = 0,
    Position = UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0),
    AutomaticSize = "Y"
  })
  
  local TextLabel = Create("TextLabel", Frame2, {
    Size = UDim2.new(1, 0, 0, 25),
    Font = CfgHub.Txt_Font,
    BackgroundTransparency = 1,
    BorderSizePixel = 0,
    Text = Title,
    TextSize = 20,
    Position = UDim2.new(0, 20, 0, 5),
    TextXAlignment = "Left",
    TextColor3 = CfgHub.Set_Col_Txt
  })
  
  local TextButton = Create("TextButton", Frame2, {
    Text = "X",
    Font = CfgHub.Txt_Font,
    TextSize = 20,
    BackgroundTransparency = 1,
    BorderSizePixel = 0,
    TextColor3 = Color3.fromRGB(200, 200, 200),
    Position = UDim2.new(1, -5, 0, 5),
    AnchorPoint = Vector2.new(1, 0),
    Size = UDim2.new(0, 25, 0, 25)
  })
  
  local TextLabel = Create("TextLabel", Frame2, {
    Size = UDim2.new(1, -30, 0, 0),
    Position = UDim2.new(0, 20, 0, TextButton.Size.Y.Offset + 10),
    TextSize = 15,
    TextColor3 = CfgHub.Set_Col_Txt2,
    TextXAlignment = "Left",
    TextYAlignment = "Top",
    BorderSizePixel = 0,
    AutomaticSize = "Y",
    Text = text,
    Font = CfgHub.Txt_Font,
    BackgroundTransparency = 1,
    AutomaticSize = Enum.AutomaticSize.Y,
    TextWrapped = true
  })
  
  local FrameSize = Create("Frame", Frame2, {
    Size = UDim2.new(1, 0, 0, 2),
    BackgroundColor3 = CfgHub.Col_Stroke,
    Position = UDim2.new(0, 2, 0, 30),
    BorderSizePixel = 0
  })Create("Frame", Frame2, {
    Size = UDim2.new(0, 0, 0, 5),
    Position = UDim2.new(0, 0, 1, 5),
    BorderSizePixel = 0,
    BackgroundTransparency = 1
  })
  
  task.spawn(function()
    CreateTween(FrameSize, "Size", UDim2.new(0, 0, 0, 2), timewait, true)
  end)
  
  TextButton.MouseButton1Click:Connect(function()
    CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.1, true)
    CreateTween(Frame2, "Position", UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0), 0.5, true)
    Frame1:Destroy()
  end)
  
  task.spawn(function()
    CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.5, true)
    CreateTween(Frame2, "Position", UDim2.new(), 0.1, true)task.wait(timewait)
    if Frame2 then
      CreateTween(Frame2, "Position", UDim2.new(0, -20, 0, 0), 0.1, true)
      CreateTween(Frame2, "Position", UDim2.new(0, Menu_Notifi.Size.X.Offset, 0, 0), 0.5, true)
      Frame1:Destroy()
    end
  end)
end



-- Make Window

function Mandkwmqnsiwoa(Configs)
local title = Configs.Hub.Title or "Never Eyes"
local Anim_Title = Configs.Hub.Animation or "Never Eyes"
local Menu = Create("Frame", ScreenGui, {
BackgroundColor3 = CfgHub.Col_Hub,
BorderSizePixel = 0,
Position = UDim2.new(0.5, -250, 0.5, -120),
Active = true,
Draggable = true
})
  
local TopBar = Create("Frame", Menu, {
BackgroundTransparency = 1,
BorderSizePixel = 0,
Size = UDim2.new(1, 0, 0, 30),
Visible = false
})
 
  
local Title = Create("TextLabel", TopBar, {
Size = UDim2.new(0, 100, 1, 0),
Position = UDim2.new(0, 30, 0, 0),
TextColor3 = CfgHub.Set_Col_Txt,
Font = CfgHub.Txt_Font,
BorderSizePixel = 0,
TextXAlignment = "Left",
Text = title,
TextSize = 20,
BackgroundTransparency = 1
})

local Minimize_BTN = Create("TextButton", TopBar, {
Text = "-",
TextColor3 = CfgHub.Set_Col_Txt,
Size = UDim2.new(0, 30, 0, 30),
Position = UDim2.new(1, -30, 0, 0),
BackgroundTransparency = 1,
Font = CfgHub.Txt_Font,
BorderSizePixel = 0,
TextYAlignment = "Center",
TextSize = 25
})

local IconNameScript = Create("ImageLabel", TopBar, {
Size = UDim2.new(0,30,0,30),
BackgroundTransparency = 1,
Image = "rbxassetid://77856411511065"
})

IsMinimized = false
Minimize_BTN.MouseButton1Click:Connect(function()
Minimize_BTN.Text = not IsMinimized and "+" or "-"
if IsMinimized then
IsMinimized = false
CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 270), 0.15, false)
else
IsMinimized = true
CreateTween(Menu, "Size", UDim2.new(0, 200, 0, 30), 0.15, true)
end
end)
  
  local AnimMenu = Create("Frame", ScreenGui, {
    Position = UDim2.new(0.5, 0, 0.5, 0),
    AnchorPoint = Vector2.new(0.5, 0.5),
    BorderSizePixel = 0,
    BackgroundColor3 = CfgHub.Col_Hub
  })
  
  local AnimMenuEcon = Create("ImageLabel", AnimMenu, {
  	Size = UDim2.new(1, -80,0,60),
  Position = UDim2.new(0,40,0,0),
  BorderSizePixel = 0,
  BackgroundTransparency = 1,
Image = "rbxassetid://77856411511065"
  	})
  
  local Anim_Credits = Create("TextLabel", AnimMenu, {
    Text = Anim_Title,
    BackgroundTransparency = 1,
    Size = UDim2.new(1, 0, 0, 30),
    Visible = false,
    Font = CfgHub.Txt_Font,
    TextTransparency = 1,
    BorderSizePixel = 0,
    TextColor3 = CfgHub.Set_Col_Txt,
    Position = UDim2.new(0, 0, 0, 60),
    TextXAlignment = "Center",
    TextSize = 15
  })
  
  CreateTween(AnimMenu, "Size", UDim2.new(0, 0, 0, 35), 0, true)
  CreateTween(AnimMenu, "Size", UDim2.new(0, 150, 0, 100),0, true)
  Anim_Credits.Visible = true
  AnimMenuEcon.Visible = true
  task.wait(0.10000)
  for i = 1, 0, -0.1 do task.wait(0.100)
    Anim_Credits.TextTransparency = i
    AnimMenuEcon.ImageTransparency = i
  end
  task.wait(1)
  for i = 0, 1, 0.1 do task.wait()
    Anim_Credits.TextTransparency = i
    AnimMenuEcon.ImageTransparency = i
  end
  Anim_Credits:Destroy()
  AnimMenuEcon:Destroy()
  AnimMenu:Destroy()
  CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 35), 0.5, true)
  TopBar.Visible = true
  CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 270), 0.3, true)
  Menu.Draggable = true
  
  local line_Containers = Create("Frame", Menu, {
    BackgroundTransparency = 1,
    Size = UDim2.new(1, 0, 1, 0)
  })
  
  function Makwndjwowmqlqlqlqlajwl(Configs)
    local image = Configs.Image or ""
    local size = Configs.Size or {30, 30}
    local color = Configs.Color or CfgHub.Col_Hub
    local stroke = Configs.Stroke or false
    local strokecolor = Configs.StrokeColor or CfgHub.Col_Stroke
    
    local Button = Create("ImageButton", ScreenGui, {
      Size = UDim2.new(0, size[1], 0, size[2]),
      Position = UDim2.new(0.15, 0, 0.15, 0),
      BackgroundColor3 = color,
      BackgroundTransparency = 1,
      BorderSizePixel = 0,
      Image = image,
      Active = true,
      Draggable = true
    })if stroke then Stroke(Button, {Color = strokecolor}) end
    
    local minimize = false
    Button.MouseButton1Click:Connect(function()
      if minimize then
        minimize = false
        Menu.Visible = true
        if not IsMinimized then
          CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 270), 0.3, false)
        else
          CreateTween(Menu, "Size", UDim2.new(0, 200, 0, 30), 0.3, false)
        end
      else
        minimize = true
        CreateTween(Menu, "Size", UDim2.new(0, 500, 0, 0), 0.3, true)
        Menu.Visible = false
      end
    end)
  end
  
  local ScrollBar = Create("ScrollingFrame", Menu, {
    Size = UDim2.new(0, 180, 1, -tonumber(TopBar.Size.Y.Offset + 2)),
    Position = UDim2.new(0, 0, 1, 0),
    AnchorPoint = Vector2.new(0, 1),
    CanvasSize = UDim2.new(),
    BorderSizePixel = 0,
    ScrollingDirection = "Y",
    AutomaticCanvasSize = "Y",
    BackgroundTransparency = 1,
    ScrollBarThickness = 2
  })Create("UIPadding", ScrollBar, {
    PaddingLeft = UDim.new(0, 10),
    PaddingRight = UDim.new(0, 10),
    PaddingTop = UDim.new(0, 10),
    PaddingBottom = UDim.new(0, 10)
  })Create("UIListLayout", ScrollBar, {
    Padding = UDim.new(0, 5)
  })
  
  local Containers = Create("Frame", Menu, {
    Size = UDim2.new(1, -tonumber(ScrollBar.Size.X.Offset + 2), 1, -tonumber(TopBar.Size.Y.Offset + 2)),
    AnchorPoint = Vector2.new(1, 1),
    BorderSizePixel = 0,
    Position = UDim2.new(1, 0, 1, 0),
    BackgroundTransparency = 1
  })
  
  local function Add_Line(props)
    local line = Create("Frame", line_Containers, props)
    line.BackgroundColor3 = CfgHub.Col_LinesTwo
    line.BorderSizePixel = 0
  end
  
  Add_Line({Size = UDim2.new(1, 0, 0, 1),Position = UDim2.new(0, 0, 0, TopBar.Size.Y.Offset)})
  Add_Line({Size = UDim2.new(0, 1, 1, -tonumber(TopBar.Size.Y.Offset + 1)),
  Position = UDim2.new(0, ScrollBar.Size.X.Offset, 0, TopBar.Size.Y.Offset)})
  
  local firstVisible = true
  local FirstTab = true
  local textsize = 15
  local textcolor = CfgHub.Set_Col_Txt
  
  Menu:GetPropertyChangedSignal("Size"):Connect(function()
    if Menu.Size.Y.Offset > 70 then
      ScrollBar.Visible = true
      Containers.Visible = true
      line_Containers.Visible = true
    else
      ScrollBar.Visible = false
      Containers.Visible = false
      line_Containers.Visible = false
    end
  end)
  
  function MakeTab(Configs)
    local TabName = Configs.Name or "Tab"
    local TabTitle = Configs.TabTitle or false
    
    local Frame = Create("Frame", ScrollBar, {
      Size = UDim2.new(1, 0, 0, 25),
      BackgroundTransparency = 1
    })
    
    local TextButton = Create("TextButton", Frame, {
      Size = UDim2.new(1, 0, 1, 0),
      BackgroundTransparency = 1,
      Text = ""
    })
    
    local TextLabel = Create("TextLabel", Frame, {
      Size = UDim2.new(1, 0, 1, 0),
      BackgroundTransparency = 1,
      Font = CfgHub.Txt_Font,
      TextColor3 = textcolor,
      Position = UDim2.new(0, 10, 0, 0),
      TextXAlignment = "Left",
      TextSize = textsize,
      Text = TabName
    })
    
    local Container = Create("ScrollingFrame", Containers, {
      Size = UDim2.new(1, 0, 1, 0),
      ScrollingDirection = "Y",
      AutomaticCanvasSize = "Y",
      CanvasSize = UDim2.new(),
      BackgroundTransparency = 1,
      ScrollBarThickness = 2,
      Visible = firstVisible
    })Create("UIPadding", Container, {
      PaddingLeft = UDim.new(0, 10),
      PaddingRight = UDim.new(0, 10),
      PaddingTop = UDim.new(0, 10),
      PaddingBottom = UDim.new(0, 10)
    })Create("UIListLayout", Container, {
      Padding = UDim.new(0, 5)
    })
    
    if TabTitle then
      Create("TextLabel",Container,{BackgroundTransparency=1,Text="#"..string.gsub(TabName," ","-"),TextSize=25,Font=CfgHub.Txt_Font,TextXAlignment="Left",TextColor3=CfgHub.Set_Col_Txt,Size=UDim2.new(1, 0, 0, 30),Position=UDim2.new(0, 30, 0, 0),Name="Frame"})
    end
    
    TextButton.MouseButton1Click:Connect(function()
      for _,container in pairs(Containers:GetChildren()) do
        if container:IsA("ScrollingFrame") then
          container.Visible = false
        end
      end
      for _,frame in pairs(ScrollBar:GetChildren()) do
        if frame:IsA("Frame") and frame:FindFirstChild("TextLabel") and frame.TextLabel ~= TextLabel then
          CreateTween(frame.TextLabel, "TextColor3", CfgHub.Set_Col_Txt2, 0.3, false)
          frame.TextLabel.TextSize = 14
        end
      end
      Container.Visible = true
      CreateTween(TextLabel, "TextColor3", CfgHub.Set_Col_Txt, 0.3, false)
      TextLabel.TextSize = 15
    end)
    
    firstVisible = false
    FirstTab = false
    textsize = 14
    textcolor = CfgHub.Set_Col_Txt2
    return Container
  end
  
  function AddButton(parent, Configs)
    local ButtonName = Configs.Name or "Button!!"
    local Callback = Configs.Callback or function() end
    
    local TextButton = Create("TextButton", parent, {
      Size = UDim2.new(1, 0, 0, 25),
      BackgroundColor3 = CfgHub.Col_Options,
      Text = "",
      Name = "Frame",
      AutoButtonColor = false
    })Stroke(TextButton,{
    	Color = CfgHub.Col_All_Btn
})
    
    local TextLabel = Create("TextLabel", TextButton, {
      TextSize = 15,
      TextColor3 = CfgHub.Set_Col_Txt,
      Text = ButtonName,
      Size = UDim2.new(1, 0, 1, 0),
      Position = UDim2.new(0, 10, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      Font = CfgHub.Txt_Font
    })
    
    local ImageLabel = Create("ImageLabel", TextButton, {
      Image = "",
      Size = UDim2.new(0, 0, 0, 0),
      Position = UDim2.new(0, 0, 0, 0),
      BackgroundTransparency = 1,
      ImageColor3 = CfgHub.Col_Stroke
    })
    
    TextButton.MouseButton1Click:Connect(function()
      Callback("Click!!")
      CreateTween(ImageLabel, "ImageColor3", Color3.fromRGB(250, 250, 250), 0.2, true)
      CreateTween(ImageLabel, "ImageColor3", CfgHub.Col_Stroke, 0.2, false)
    end)
    
    TextSetColor(TextLabel)
  end
  
  function AddToggle(parent, Configs)
    local ToggleName = Configs.Name or "Toggle!!"
    local Default = Configs.Default or false
    local Callback = Configs.Callback or function() end
    
    local TextButton = Create("TextButton", parent, {
      Size = UDim2.new(1, 0, 0, 25),
      BackgroundColor3 = CfgHub.Col_Options,
      Text = "",
      Name = "Frame",
      AutoButtonColor = false
    })Stroke(TextButton,{
Color = Color3.fromRGB(18, 0, 53)
})
    
    local TextLabel = Create("TextLabel", TextButton, {
      TextSize = 15,
      TextColor3 = CfgHub.Set_Col_Txt,
      Text = ToggleName,
      Size = UDim2.new(1, 0, 1, 0),
      Position = UDim2.new(0, 35, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      Font = CfgHub.Txt_Font
    })
    
    local Frame1 = Create("Frame", TextButton, {
      Size = UDim2.new(0, 25, 0, 15),
      Position = UDim2.new(0, 5, 0, 5),
      BackgroundTransparency = 1,
    })
    local Stroke = Stroke(Frame1, {Thickness = 2})
    
    local Frame2 = Create("Frame", Frame1, {
      Size = UDim2.new(0, 13, 0, 13),
      Position = UDim2.new(0, 2, 0.5, 0),
      AnchorPoint = Vector2.new(0, 0.5),
      BackgroundColor3 = CfgHub.Col_Stroke
    })
    
    local OnOff = false
    if Default then
      OnOff = true
      CreateTween(Frame2, "Position", UDim2.new(0, 10, 0.5, 0), 0.2, false)
      CreateTween(Frame2, "BackgroundColor3", Color3.fromRGB(250, 250, 250), 0.2, false)
      CreateTween(Stroke, "Color", Color3.fromRGB(250, 250, 250), 0.2, false)
      CreateTween(TextLabel, "TextColor3", Color3.fromRGB(250, 250, 250), 0.2, false)
    end
    Callback(OnOff)
    TextButton.MouseButton1Click:Connect(function()
      if Frame2.Position.X.Offset < 5 then
        OnOff = true
        CreateTween(Frame2, "Position", UDim2.new(0, 10, 0.5, 0), 0.2, false)
        CreateTween(Frame2, "BackgroundColor3", Color3.fromRGB(250, 250, 250), 0.2, false)
        CreateTween(Stroke, "Color", Color3.fromRGB(250, 250, 250), 0.2, false)
        CreateTween(TextLabel, "TextColor3", Color3.fromRGB(250, 250, 250), 0.2, false)
        Callback(true)
      else
        OnOff = false
        CreateTween(Frame2, "Position", UDim2.new(0, 2, 0.5, 0), 0.2, false)
        CreateTween(Frame2, "BackgroundColor3", CfgHub.Col_Stroke, 0.2, false)
        CreateTween(Stroke, "Color", CfgHub.Col_Stroke, 0.2, false)
        CreateTween(TextLabel, "TextColor3", CfgHub.Set_Col_Txt, 0.2, false)
        Callback(false)
      end
    end)
    return {Frame2, Stroke, OnOff, Callback}
  end
  
  
  function AddSlider(parent, Configs)
    local SliderName = Configs.Name or "Slider!!"
    local Increase = Configs.Increase or 1
    local MinValue = Configs.MinValue / Increase or 10 / Increase
    local MaxValue = Configs.MaxValue / Increase or 100 / Increase
    local Default = Configs.Default or 25
    local Callback = Configs.Callback or function() end
    
    local Frame = Create("TextButton", parent, {
      Size = UDim2.new(1, 0, 0, 25),
      BackgroundColor3 = CfgHub.Col_Options,
      Name = "Frame",
      Text = 0
    })Stroke(Frame,{
Color = CfgHub.Col_All_Btn
})
    
    local TextLabel = Create("TextButton", Frame, {
      TextSize = 15,
      TextColor3 = CfgHub.Set_Col_Txt,
      Text = SliderName,
      Size = UDim2.new(1, 0, 1, 0),
      Position = UDim2.new(0, 150, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      Font = CfgHub.Txt_Font
    })TextSetColor(TextLabel)
    
    local TextLabelNumber = Create("TextLabel", Frame, {
      Font = CfgHub.Txt_Font,
      Size = UDim2.new(0, 20, 0, 20),
      Text = "...",
      Position = UDim2.new(0, 5, 0, 2.5),
      TextScaled = true,
      TextColor3 = CfgHub.Set_Col_Txt,
      BackgroundTransparency = 1
    })
    
    local SliderBar1 = Create("TextLabel", Frame, {
      Size = UDim2.new(0, 100, 0, 7.5),
      Position = UDim2.new(0, 35, 0.5, 0),
      AnchorPoint = Vector2.new(0, 0.5),
      BackgroundColor3 = CfgHub.Col_Stroke,
      Text = ""
    })
    
    local SavePos = Create("Frame", SliderBar1, {
      Size = UDim2.new(0, 1, 0, 0),
      Visible = false
    })
    
    local Slider = Create("Frame", SliderBar1, {
      BackgroundColor3 = CfgHub.Set_Col_Txt,
      Size = UDim2.new(0, 5, 0, 5),
      Position = UDim2.new(0, 0, 0.5, 0),
      AnchorPoint = Vector2.new(0, 0.5),
      Active = true,
      Draggable = true
    })
    
    local SliderBar2 = Create("Frame", SliderBar1, {
      BackgroundColor3 = Color3.fromRGB(250, 250, 250),
      Size = UDim2.new(0, Slider.Position.X.Offset, 1, 0)
    })
    
    local function UpdCounter(Value)
      local String = tostring(Value * Increase)
      if string.find(String, ".") then
        String = String:sub(1, 5)
      end
      TextLabelNumber.Text = String
      Callback(Value * Increase)
    end
    
    local MouseEnterOrLeave = false
    Frame.MouseButton1Down:Connect(function()
      MouseEnterOrLeave = true
      while MouseEnterOrLeave do task.wait()
        local MousePos = UserInputService:GetMouseLocation().X - SavePos.AbsolutePosition.X
        Slider.Position = UDim2.new(0, MousePos, 0.5, 0)
      end
    end)
    Frame.MouseLeave:Connect(function()
      MouseEnterOrLeave = false
    end)
    
    local function SliderSet(NewValue)
      local max, min = MaxValue * Increase, MinValue * Increase
      local SliderPos = (NewValue - min) / (max - min)
      local X_Offset = SliderPos * 100
      local SliderPosition = UDim2.new(0, X_Offset + 1, 0, 0)
      CreateTween(Slider, "Position", SliderPosition, 0.5, false)
    end
    SliderSet(Default)
    
    Slider.Changed:Connect(function(prop)
      if prop == "Position" then
        Slider.Position = UDim2.new(0, math.clamp(Slider.Position.X.Offset, 0, 100), 0.5, 0)
        SliderBar2.Size = UDim2.new(0, Slider.Position.X.Offset, 1, 0)
        local SliderPos = Slider.Position.X.Offset / 100
        local A_1 = math.floor(((SliderPos * MaxValue) / MaxValue) * (MaxValue - MinValue) + MinValue)
        UpdCounter(A_1)
      end
    end)
    return {Slider, Increase, MaxValue, MinValue}
  end
  
  function UpdateSlider(Slider, NewValue)
    local Frame = Slider[1]
    local Increase = Slider[2]
    local Max = Slider[3] * Increase
    local Min = Slider[4] * Increase
    
    local SliderPos = (NewValue - Min) / (Max - Min)
    local X_Offset = SliderPos * 100
    local SliderPosition = UDim2.new(0, X_Offset + 1, 0, 0)
    CreateTween(Frame, "Position", SliderPosition, 0.5, false)
  end
  
  function AddKeybind(parent, Configs)
    local KeybindName = Configs.Name or "Slider!!"
    local KeyCode = Configs.KeyCode or "E"
    local Default = Configs.Default or false
    local Callback = Configs.Callback or function() end
    
    local Frame = Create("Frame", parent, {
      Size = UDim2.new(1, 0, 0, 25),
      BackgroundColor3 = CfgHub.Col_Options,
      Name = "Frame"
    })Stroke(Frame)
    
    local TextLabel = Create("TextButton", Frame, {
      TextSize = 15,
      TextColor3 = CfgHub.Set_Col_Txt,
      Text = KeybindName,
      Size = UDim2.new(1, 0, 1, 0),
      Position = UDim2.new(0, 35, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      Font = CfgHub.Txt_Font
    })
    
    local Keybind = Create("TextLabel", Frame, {
      Font = CfgHub.Txt_Font,
      Size = UDim2.new(0, 18, 0, 18),
      Text = KeyCode,
      Position = UDim2.new(0, 5, 0, 3.5),
      TextScaled = true,
      TextColor3 = CfgHub.Set_Col_Txt,
      BackgroundTransparency = 1
    })Stroke(Keybind)
    
    local OnOff = Default
    UserInputService.InputBegan:Connect(function(input)
      if input.KeyCode == Enum.KeyCode[KeyCode] then
        OnOff = not OnOff
        Callback(OnOff)
      end
    end)
    TextSetColor(TextLabel)
  end
  
  
  function AddDropdown(parent, Configs)
    local DropdownName = Configs.Name or "Dropdown"
    local Default = Configs.Default or "TextBox"
    local Options = Configs.Options or {"1", "2", "3"}
    local Default = Configs.Default or "2"
    local Callback = Configs.Callback or function() end
    
    local TextButton = Create("TextButton", parent, {
      Size = UDim2.new(1, 0, 0, 25),
      BorderColor3 = Color3.fromRGB(13 ,0, 53),
      BackgroundColor3 = Color3.fromRGB(0, 0, 0),
      Name = "Frame",
      Text = "",
      AutoButtonColor = false
    })Stroke(Frame)
    
    local TextLabel = Create("TextLabel", TextButton, {
      TextSize = 15,
      TextColor3 = CfgHub.Set_Col_Txt,
      Text = DropdownName,
      Size = UDim2.new(1, 0, 0, 25),
      Position = UDim2.new(0, 35, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      Font = CfgHub.Txt_Font
    })TextSetColor(TextLabel)
    
    local Line = Create("Frame", TextButton, {
      Size = UDim2.new(1, 0, 0, 1),
      Position = UDim2.new(0, 0, 0, 25),
      BorderSizePixel = 0,
      BackgroundColor3 = CfgHub.Col_All_Btn,
      Visible = false
    })
    
    local Arrow = Create("ImageLabel", TextButton, {
      Image = "rbxassetid://6031090990",
      Size = UDim2.new(0, 25, 0, 25),
      Position = UDim2.new(0, 5, 0, 0),
      BackgroundTransparency = 1
    })
    
    local DefaultText = Create("TextLabel", TextButton, {
      BackgroundColor3 = CfgHub.Col_Hub,
      BackgroundTransparency = 0.1,
      BorderSizePixel = 0,
      Position = UDim2.new(1, -20, 0, 2),
      AnchorPoint = Vector2.new(1, 0),
      Size = UDim2.new(0, 100, 0, 20),
      TextColor3 = CfgHub.Set_Col_Txt2,
      TextScaled = true,
      Font = CfgHub.Txt_Font,
      Text = "..."
    })
    
    local ScrollBar = Create("ScrollingFrame", TextButton, {
      Size = UDim2.new(1, 0, 1, -25),
      Position = UDim2.new(0, 0, 0, 25),
      CanvasSize = UDim2.new(),
      ScrollingDirection = "Y",
      AutomaticCanvasSize = "Y",
      BackgroundTransparency = 1,
      ScrollBarThickness = 2
    })Create("UIPadding", ScrollBar, {
      PaddingLeft = UDim.new(0, 10),
      PaddingRight = UDim.new(0, 10),
      PaddingTop = UDim.new(0, 10),
      PaddingBottom = UDim.new(0, 10)
    })Create("UIListLayout", ScrollBar, {
      Padding = UDim.new(0, 5)
    })
    
    local function AddOption(OptionName)
      local TextButton = Create("TextButton", ScrollBar, {
        Size = UDim2.new(1, 0, 0, 15),
        Text = OptionName,
        Font = CfgHub.Txt_Font,
        TextSize = 12,
        TextColor3 = Color3.fromRGB(180, 180, 180),
        BackgroundTransparency = 1
      })
      
      local SelectTable = {}
      local OnOff = false
      if OptionName == Default then
        OnOff = true
        TextButton.BackgroundTransparency = 0.8
        TextButton.TextColor3 = CfgHub.Set_Col_Txt
        DefaultText.Text = OptionName
        Callback(OptionName)
      end
      
      TextButton.MouseButton1Click:Connect(function()
        for _,v in pairs(ScrollBar:GetChildren()) do
          if v:IsA("TextButton") then
            v.BackgroundTransparency = 1
            v.TextColor3 = Color3.fromRGB(180, 180, 180)
          end
        end
        DefaultText.Text = OptionName
        Callback(OptionName)
        TextButton.BackgroundTransparency = 0.8
        TextButton.TextColor3 = CfgHub.Set_Col_Txt
      end)
    end
    
    for _,v in pairs(Options) do
      AddOption(v)
    end
    
    local DropOnOff = false
    TextButton.MouseButton1Click:Connect(function()
      local OptionSize, OptionsNumber = 25, 0
      for _,v in pairs(ScrollBar:GetChildren()) do
        if v:IsA("TextButton") and OptionsNumber < 5 then
          OptionsNumber = OptionsNumber + 1
          OptionSize = OptionSize + tonumber(v.Size.Y.Offset + 10)
        end
      end
      if not DropOnOff then
        CreateTween(TextButton, "Size", UDim2.new(1, 0, 0, OptionSize), 0.3, false)
        CreateTween(Arrow, "Rotation", 180, 0.3, false)
        DropOnOff = true
        Line.Visible = true
      else
        CreateTween(TextButton, "Size", UDim2.new(1, 0, 0, 25), 0.3, false)
        CreateTween(Arrow, "Rotation", 0, 0.3, true)
        DropOnOff = false
        Line.Visible = false
      end
    end)
    return {ScrollBar, Default, Callback, DefaultText}
  end
  
  function UpdateDropdown(Dropdown, NewOptions)
    local ScrollBar = Dropdown[1]
    local Default = Dropdown[2]
    local Callback = Dropdown[3]
    local DefaultText = Dropdown[4]
    
    for _,v in pairs(ScrollBar:GetChildren()) do
      if v:IsA("TextButton") then
        v:Destroy()
      end
    end
    
    local function AddOption(OptionName)
      local TextButton = Create("TextButton", ScrollBar, {
        Size = UDim2.new(1, 0, 0, 15),
        Text = OptionName,
        Font = CfgHub.Txt_Font,
        TextSize = 12,
        TextColor3 = Color3.fromRGB(180, 180, 180),
        BackgroundTransparency = 1
      })
      
      local SelectTable = {}
      local OnOff = false
      if OptionName == Default then
        OnOff = true
        TextButton.BackgroundTransparency = 0.8
        TextButton.TextColor3 = CfgHub.Set_Col_Txt
        DefaultText.Text = OptionName
        Callback(OptionName)
      else
        DefaultText.Text = "..."
      end
      
      TextButton.MouseButton1Click:Connect(function()
        for _,v in pairs(ScrollBar:GetChildren()) do
          if v:IsA("TextButton") then
            v.BackgroundTransparency = 1
            v.TextColor3 = Color3.fromRGB(180, 180, 180)
          end
        end
        DefaultText.Text = OptionName
        Callback(OptionName)
        TextButton.BackgroundTransparency = 0.8
        TextButton.TextColor3 = CfgHub.Set_Col_Txt
      end)
    end
    
    for _,v in pairs(NewOptions) do
      AddOption(v)
    end
  end
  
  function AddLabel(parent, Configs)
    local LabelName = Configs.Name or "Text Label!!"
    
    local Frame = Create("Frame", parent, {
      Size = UDim2.new(1, 0, 0, 25),
      BorderSizePixel = 0,
      BackgroundColor3 = CfgHub.Col_Options,
      Name = "Frame"
    })
    
    local TextButton = Create("TextButton", Frame, {
      TextSize = 15,
      TextColor3 = CfgHub.Set_Col_Txt,
      Text = LabelName,
      Size = UDim2.new(1, 0, 0, 25),
      Position = UDim2.new(0, 0, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Center",
      Font = CfgHub.Txt_Font
    })
    TextSetColor(TextButton)
    return TextButton
  end
  
  function SetLabel(label, NewValue)
    label.Text = NewValue
  end
  
  function AddTextBox(parent, Configs)
    local TextBoxName = Configs.Name or "TextBox!!"
    local Default = Configs.Default or "TextBox"
    local ClearText = Configs.ClearText or false
    local Callback = Configs.Callback or function() end
    
    local Frame = Create("Frame", parent, {
      Size = UDim2.new(1, 0, 0, 25),
      BorderColor3 = Color3.fromRGB(13, 0, 53),
      BackgroundColor3 = CfgHub.Col_Options,
      Name = "Frame"
    })
    
    local TextLabel = Create("TextButton", Frame, {
      TextSize = 15,
      TextColor3 = CfgHub.Set_Col_Txt,
      Text = TextBoxName,
      Size = UDim2.new(1, 0, 1, 0),
      Position = UDim2.new(0, 10, 0, 0),
      BackgroundTransparency = 1,
      TextXAlignment = "Left",
      Font = CfgHub.Txt_Font
    })
    TextSetColor(TextLabel)
    
    local TextBox = Create("TextBox", Frame, {
      Size = UDim2.new(0, 120, 0, 20),
      Position = UDim2.new(0, 150, 0, 2.5),
      TextColor3 = CfgHub.Set_Col_Txt,
      Text = Default,
      ClearTextOnFocus = ClearText,
      PlaceholderText = "Write text or value",
      TextScaled = true,
      Font = CfgHub.Txt_Font,
      BackgroundTransparency = 1
    })
    
    local Line = Create("Frame", TextBox, {
      Size = UDim2.new(1, 0, 0, 1),
      Position = UDim2.new(0.5, 0, 1, 0),
      AnchorPoint = Vector2.new(0.5, 0.5),
      BackgroundColor3 = CfgHub.Col_Stroke,
      BorderSizePixel = 0
    })
    
    TextBox.MouseEnter:Connect(function()
      CreateTween(Line, "Size", UDim2.new(0, 0, 0, 1), 0.3, true)
      CreateTween(Line, "Size", UDim2.new(1, 0, 0, 1), 0.3, true)
    end)
    
    TextBox.FocusLost:Connect(function()
      Callback(TextBox.Text)
    end)
  end
  
    return Menu
end
  
  Mandkwmqnsiwoa({
Hub = {
Title = "Never Eyes",
Animation = "NeverEyes Loaded"
}})
  
  Makwndjwowmqlqlqlqlajwl({
  Image = "rbxassetid://77856411511065",
  Size = {40, 40},
  Color = Color3.fromRGB(0, 0, 0),
  Corner = true,
  Stroke = false,
  StrokeColor = Color3.fromRGB(255, 0, 0)
})
